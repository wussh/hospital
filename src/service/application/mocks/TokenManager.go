// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import entity "github.com/Hospital-Management-System-Group-34/BE-Rest-API/src/entity"
import mock "github.com/stretchr/testify/mock"

// TokenManager is an autogenerated mock type for the TokenManager type
type TokenManager struct {
	mock.Mock
}

// DecodeAccessTokenPayload provides a mock function with given fields: accessToken
func (_m *TokenManager) DecodeAccessTokenPayload(accessToken string) (entity.AuthenticationPayload, error) {
	ret := _m.Called(accessToken)

	var r0 entity.AuthenticationPayload
	if rf, ok := ret.Get(0).(func(string) entity.AuthenticationPayload); ok {
		r0 = rf(accessToken)
	} else {
		r0 = ret.Get(0).(entity.AuthenticationPayload)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accessToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DecodeRefreshTokenPayload provides a mock function with given fields: refreshToken
func (_m *TokenManager) DecodeRefreshTokenPayload(refreshToken string) (entity.AuthenticationPayload, error) {
	ret := _m.Called(refreshToken)

	var r0 entity.AuthenticationPayload
	if rf, ok := ret.Get(0).(func(string) entity.AuthenticationPayload); ok {
		r0 = rf(refreshToken)
	} else {
		r0 = ret.Get(0).(entity.AuthenticationPayload)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(refreshToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GenerateAccessToken provides a mock function with given fields: payload
func (_m *TokenManager) GenerateAccessToken(payload entity.AuthenticationPayload) string {
	ret := _m.Called(payload)

	var r0 string
	if rf, ok := ret.Get(0).(func(entity.AuthenticationPayload) string); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GenerateRefreshToken provides a mock function with given fields: payload
func (_m *TokenManager) GenerateRefreshToken(payload entity.AuthenticationPayload) string {
	ret := _m.Called(payload)

	var r0 string
	if rf, ok := ret.Get(0).(func(entity.AuthenticationPayload) string); ok {
		r0 = rf(payload)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// VerifyRefreshToken provides a mock function with given fields: refreshToken
func (_m *TokenManager) VerifyRefreshToken(refreshToken string) error {
	ret := _m.Called(refreshToken)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(refreshToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
